[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "toolcraft"
dynamic = ["version"]
description = "A comprehensive toolkit for automation and development workflows"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Praveen Kulkarni", email = "praveenneuron@gmail.com" },
]
maintainers = [
    { name = "Praveen Kulkarni", email = "praveenneuron@gmail.com" },
]
keywords = [
    "automation",
    "development",
    "toolkit",
    "cli",
    "utilities",
    "powershell",
    "python",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
]
dependencies = [
    "click>=8.0.0",
    "rich>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "hf-doc-builder>=0.5.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
]

[project.scripts]
toolcraft = "toolcraft.cli:toolcraft_cli"

[project.urls]
Homepage = "https://github.com/SpikingNeurons/toolcraft"
Documentation = "https://spikingneurons.github.io/toolcraft/toolcraft/v0.1.0/en/"
Repository = "https://github.com/SpikingNeurons/toolcraft"
"Bug Reports" = "https://github.com/SpikingNeurons/toolcraft/issues"
Changelog = "https://github.com/SpikingNeurons/toolcraft/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "toolcraft/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["toolcraft"]

[tool.hatch.build.targets.sdist]
include = [
    "/toolcraft",
    "/tests",
    "/docs",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
cache_dir = "build/pytest_cache"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=toolcraft",
    "--cov-report=term-missing",
    "--cov-report=html:build/coverage/html",
    "--cov-report=xml:build/coverage/coverage.xml",
]

# Coverage configuration
[tool.coverage.run]
data_file = "build/coverage/.coverage"
source = ["toolcraft"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "build/coverage/html"

[tool.coverage.xml]
output = "build/coverage/coverage.xml"

# Code formatting
[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | htmlcov
)/
'''

# Import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["toolcraft"]

# Type checking
[tool.mypy]
python_version = "3.9"
cache_dir = "build/mypy_cache"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[dependency-groups]
dev = [
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mypy>=1.17.1",
]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    "*.egg-info",
]
